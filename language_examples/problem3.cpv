# Pre declarations
# Multiplicação de matrizes no Haskell
# mmult a b = [[ sum $ zipWith (*) ar bc | bc <- (transpose b)] | ar <- a ]
#Crie um programa que leia duas matrizes numéricas e, quando possível, imprima
#a soma e o produto dessas matrizes. Caso uma operação não possa ser realizada
#para as matrizes lidas, imprima uma mensagem informando da impossibilidade.

begin program

Matrix matriz1; Matrix matriz2; Matrix matriz3;
List list1;
int i; int j;
int l1; int l2; int c1; int c2;

write "Matriz 1: Quantas linhas?\n";
read > l1;
write "Matriz 1: Quantas colunas?\n";
read > c1;
write "Matriz 2: Quantas linhas?\n";
read > l2;
write "Matriz 2: Quantas colunas?\n";
read > c2;

if (l1 != l2 or c1 != c2) {
  write "Não é possível realizar a soma\n";
}
if (l1 == l2 and c1 == c2) {
  write "Lendo Matriz 1\n";
  i = 0; int x;
  while (i < l1) {
    list1 = [];
    write "Linha\n";
    j = 0;
    while (j < c1) {
      write "Coluna\n";
      read > x;
      list1 = list1 ++ x;
      j = j + 1;
    }
    matriz1 = matriz1 ++ list1;
    i = i + 1;
  }
  i = 0;
  while (i < l2) {
    list1 = [];
    write "Linha\n";
    j = 0;
    while (j < c2) {
      write "Coluna\n";
      read > x;
      list1 = list1 ++ x;
      j = j + 1;
    }
    matriz2 = matriz2 ++ list1;
    i = i + 1;
  }
  write "Matriz:\n";
  matriz1 = matriz1 + matriz2;
  write matriz1;
  write "\n";
}
if (c1 != l2){
  write "Não é possível realizar a multiplicação\n";
}

# while (i < )
#matriz1 = [[ 1 2 3 4 ]];
#matriz2 = [[ 2 2 2 2 ]];
#matriz3 = matriz1 + matriz2;
#matriz3 = matriz3 ++ list1;
#write matriz3;
#write "\nList:";
#write list1;
#write "\n";

end program

